Description: core: HACK to make old module ABI-compatible
 Here at UBports, we use a system which allow building out-of-tree
 module. The default sink handling patch modifies pa_core structure in
 an ABI-incompatible way, which means out-of-tree modules have to be
 rebuilt. I don't want to do that, so I modifies the structure again so
 all things that doesn't change stays at the same place. Hopefully this
 will let us actually avoid rebuilding (preliminary testing suggests so,
 but show knows how deep the effect is).
Author: Ratchanan Srirattanamet <ratchanan@ubports.com>
Bug-UBports: https://github.com/ubports/ubuntu-touch/issues/1045
Forwarded: not-needed
Last-Update: 2020-09-24
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/pulsecore/core.h
+++ b/src/pulsecore/core.h
@@ -161,21 +161,15 @@
     /* Some hashmaps for all sorts of entities */
     pa_hashmap *namereg, *shared;
 
-    /* The default sink/source as configured by the user. If the user hasn't
-     * explicitly configured anything, these are set to NULL. These are strings
-     * instead of sink/source pointers, because that allows us to reference
-     * devices that don't currently exist. That's useful for remembering that
-     * a hotplugged USB sink was previously set as the default sink. */
-    char *configured_default_sink;
-    char *configured_default_source;
-
     /* The effective default sink/source. If no sink or source is explicitly
      * configured as the default, we pick the device that ranks highest
      * according to the compare_sinks() and compare_sources() functions in
      * core.c. pa_core_update_default_sink/source() has to be called whenever
      * anything changes that might change the comparison results. */
-    pa_sink *default_sink;
+
+    /* HACK: restore order so that I don't have to recompile external modules. */
     pa_source *default_source;
+    pa_sink *default_sink;
 
     pa_channel_map default_channel_map;
     pa_sample_spec default_sample_spec;
@@ -223,6 +217,16 @@
     pa_hook hooks[PA_CORE_HOOK_MAX];
     /* access hooks */
     pa_hook access[PA_ACCESS_HOOK_MAX];
+
+    /* HACK: new fields moved here so that I don't have to recompile external modules. */
+
+    /* The default sink/source as configured by the user. If the user hasn't
+     * explicitly configured anything, these are set to NULL. These are strings
+     * instead of sink/source pointers, because that allows us to reference
+     * devices that don't currently exist. That's useful for remembering that
+     * a hotplugged USB sink was previously set as the default sink. */
+    char *configured_default_sink;
+    char *configured_default_source;
 };
 
 PA_DECLARE_PUBLIC_CLASS(pa_core);
